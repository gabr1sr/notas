:PROPERTIES:
:ID:       3d8ca8ce-9369-4ef2-a22c-ab6dd7f11ea4
:END:
#+title: TryFrom (Rust)
#+date: [2024-01-15 seg 01:05]
- tags :: [[id:1881cbde-ea1b-4b05-8e21-1d752db63b68][Conversão (Rust)]]
- source :: [[https://doc.rust-lang.org/stable/rust-by-example/conversion/try_from_try_into.html][TryFrom and TryInto - Rust By Example]]

É um ~trait~ genérico para converter entre tipos, similar ao [[id:500c4b1e-ff18-415e-9b98-c83ac457f553][From (Rust)]].

Porém, o ~TryFrom~ é utilizado para conversões que possam falhar.

Sendo assim, ele retorna ~Result~.

#+begin_src rust
use std::convert::TryFrom;

#[derive(Debug, PartialEq)]
struct EvenNumber(i32);

impl TryFrom<i32> for EvenNumber {
    type Error = ();
    
    fn try_from(value: i32) -> Result<Self, Self::Error> {
        if value % 2 == 0 {
            Ok(EvenNumber(value))
        } else {
            Err(())
        }
    }
}

fn main() {
    assert_eq!(EvenNumber::try_from(8), Ok(EvenNumber(8)));
    assert_eq!(EvenNumber::try_from(5), Err(()));
    println!("Everything ok!");
}
#+end_src

#+RESULTS:
: Everything ok!
