:PROPERTIES:
:ID:       43ddca7a-953e-4bc3-9958-f00af677760a
:END:
#+title: Funções Const (Rust)
#+date: [2024-02-28 Wed 15:40]
- tags :: [[id:8c21413f-6d90-49cb-bd79-724e87ecc027][Funções (Rust)]]
- source :: [[https://doc.rust-lang.org/reference/items/functions.html#const-functions][Const functions (Functions) - The Rust Reference]], [[https://doc.rust-lang.org/reference/const_eval.html#const-functions][Const Functions (Constant Evaluation) - The Rust Reference]], [[https://doc.rust-lang.org/reference/items/generics.html#const-generics][Const generics - The Rust Reference]], [[https://stackoverflow.com/a/67941488][Why can't the compiler detect that functions are constant without annotating them with const? - StackOverflow]]

Funções com o qualificador ~const~ são funções que podem ser chamadas dentro de contextos const.

Quando chamada dentro de um contexto const, a função é interpretada pelo compilador a tempo de compilação.

Declaração:

#+begin_src rust
const fn add(x: i32, y: i32) -> i32 {
    x + y
}

const RESULT: i32 = add(1, 2);

println!("{}", RESULT);
#+end_src

#+RESULTS:
: 3

* Características
- Só aceita as ABIs ~"Rust"~ e ~"C"~ se usado o qualificador ~extern~.
- Não pode ser assíncrona.
- Não pode ser usada para gerar números aleatórios (deve ser determinística).
- Sempre irá retornar o mesmo resultado, independente de quantas vezes chamada.
- Não pode fazer operações de ponto flutuante, só copiar/mover eles.
- Pode usar const em generics e parâmetros lifetime.
