:PROPERTIES:
:ID:       2b5ac93e-b896-4606-9615-aa7057c18d08
:END:
#+title: For (Rust)
#+date: [2024-02-26 Mon 18:10]
- tags :: [[id:5a70fb7b-8198-4f96-bd42-296a23b986bd][Controle de Fluxo (Rust)]]
- source :: [[https://google.github.io/comprehensive-rust/pt-BR/control-flow-basics/loops/for.html][for]], [[https://doc.rust-lang.org/std/keyword.for.html][for - Rust]], [[https://doc.rust-lang.org/reference/expressions/loop-expr.html#iterator-loops][Iterator loops]], [[https://doc.rust-lang.org/stable/rust-by-example/flow_control/for.html][for and range - Rust By Example]]

O for loop, ou loop de iterador, é usado para fazer looping em elementos providenciados pela implementação de ~std::iter::IntoIterator~.

Se o iterador conseguir um valor, esse valor é comparado ao padrão irrefutável, o corpo do loop é executado e então o controle irá retornar ao início do loop for.

Se o iterador estiver vazio, a expressão for termina.

#+begin_src rust
let v = &["apples", "cake", "coffe"];

for text in v {
    println!("I like {}.", text);
}
#+end_src

#+RESULTS:
: I like apples.
: I like cake.
: I like coffe.

Usando range:

#+begin_src rust
let mut sum = 0;

for n in 1..11 {
    sum += n;
}

println!("sum is {}", sum);
#+end_src

#+RESULTS:
: sum is 55
